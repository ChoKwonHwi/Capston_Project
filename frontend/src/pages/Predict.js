import Header from "./Header";
import { Line } from 'react-chartjs-2';
import Chart from 'chart.js/auto';
import React, { useEffect, useState } from 'react';


const Predict = () => {
  const timeLabels = Array.from({ length: 185 }, (_, i) => i + 1);
  const heightData = {
    labels: timeLabels,
    datasets: [
      {
        label: '키(cm)',
        data: [64.4,
          64.52,
          64.6,
          64.68,
          64.76,
          64.85,
          64.93,
          65.01,
          65.1,
          65.18,
          65.26,
          65.34,
          65.43,
          65.51,
          65.59,
          65.67,
          65.76,
          65.84,
          65.92,
          66.01,
          66.09,
          66.17,
          66.25,
          66.34,
          66.42,
          66.5,
          66.58,
          66.67,
          66.75,
          66.83,
          66.92,
          67.0,
          67.08,
          67.16,
          67.25,
          67.33,
          67.41,
          67.49,
          67.58,
          67.66,
          67.74,
          67.83,
          67.91,
          67.99,
          68.07,
          68.16,
          68.24,
          68.32,
          68.4,
          68.49,
          68.57,
          68.65,
          68.74,
          68.82,
          68.9,
          68.98,
          69.07,
          69.15,
          69.23,
          69.31,
          69.4,
          69.48,
          69.56,
          69.65,
          69.73,
          69.81,
          69.89,
          69.98,
          70.06,
          70.14,
          70.22,
          70.31,
          70.39,
          70.47,
          70.56,
          70.64,
          70.72,
          70.8,
          70.89,
          70.97,
          71.05,
          71.13,
          71.22,
          71.3,
          71.38,
          71.47,
          71.55,
          71.63,
          71.71,
          71.8,
          71.88,
          71.96,
          72.04,
          72.13,
          72.21,
          72.29,
          72.38,
          72.46,
          72.54,
          72.62,
          72.71,
          72.79,
          72.87,
          72.95,
          73.04,
          73.12,
          73.2,
          73.29,
          73.37,
          73.45,
          73.53,
          73.62,
          73.7,
          73.78,
          73.86,
          73.95,
          74.03,
          74.11,
          74.2,
          74.28,
          74.36,
          74.44,
          74.53,
          74.61,
          74.69,
          74.77,
          74.86,
          74.94,
          75.02,
          75.11,
          75.19,
          75.27,
          75.35,
          75.44,
          75.52,
          75.6,
          75.68,
          75.77,
          75.85,
          75.93,
          76.02,
          76.1,
          76.18,
          76.26,
          76.35,
          76.43,
          76.51,
          76.6,
          76.68,
          76.76,
          76.84,
          76.93,
          77.01,
          77.09,
          77.17,
          77.26,
          77.34,
          77.42,
          77.51,
          77.59,
          77.67,
          77.75,
          77.84,
          77.92,
          78.0,
          78.08,
          78.17,
          78.25,
          78.33,
          78.42,
          78.5,
          78.58,
          78.66,
          78.75,
          78.83,
          78.91,
          78.99,
          79.08,
          79.16,
          79.24,
          79.33],
        fill: false,
        borderColor: 'blue',
        tension: 0.3,
        pointRadius: 0, // 점의 반지름을 0으로 설정하여 숨김
        yAxisID: 'height',
      },
    ],
  };

  const weightData = {
    labels: timeLabels,
    datasets: [
      {
        label: '몸무게(kg)',
        data: [7.1,
          7.21,
          7.23,
          7.25,
          7.27,
          7.3,
          7.32,
          7.34,
          7.36,
          7.39,
          7.41,
          7.43,
          7.45,
          7.48,
          7.5,
          7.52,
          7.54,
          7.57,
          7.59,
          7.61,
          7.63,
          7.66,
          7.68,
          7.7,
          7.72,
          7.75,
          7.77,
          7.79,
          7.81,
          7.84,
          7.86,
          7.88,
          7.9,
          7.92,
          7.95,
          7.97,
          7.99,
          8.01,
          8.04,
          8.06,
          8.08,
          8.11,
          8.13,
          8.15,
          8.17,
          8.2,
          8.22,
          8.24,
          8.26,
          8.29,
          8.31,
          8.33,
          8.35,
          8.38,
          8.4,
          8.42,
          8.44,
          8.47,
          8.49,
          8.51,
          8.53,
          8.56,
          8.58,
          8.6,
          8.62,
          8.65,
          8.67,
          8.69,
          8.71,
          8.74,
          8.76,
          8.78,
          8.8,
          8.83,
          8.85,
          8.87,
          8.89,
          8.92,
          8.94,
          8.96,
          8.98,
          9.0,
          9.03,
          9.05,
          9.07,
          9.1,
          9.12,
          9.14,
          9.16,
          9.19,
          9.21,
          9.23,
          9.25,
          9.28,
          9.3,
          9.32,
          9.35,
          9.37,
          9.39,
          9.41,
          9.43,
          9.46,
          9.48,
          9.5,
          9.52,
          9.55,
          9.57,
          9.59,
          9.61,
          9.64,
          9.66,
          9.68,
          9.7,
          9.73,
          9.75,
          9.77,
          9.79,
          9.82,
          9.84,
          9.86,
          9.88,
          9.91,
          9.93,
          9.95,
          9.97,
          10.0,
          10.02,
          10.04,
          10.06,
          10.09,
          10.11,
          10.13,
          10.15,
          10.18,
          10.2,
          10.22,
          10.24,
          10.27,
          10.29,
          10.31,
          10.34,
          10.36,
          10.38,
          10.4,
          10.43,
          10.45,
          10.47,
          10.49,
          10.51,
          10.54,
          10.56,
          10.58,
          10.6,
          10.63,
          10.65,
          10.67,
          10.69,
          10.72,
          10.74,
          10.76,
          10.78,
          10.81,
          10.83,
          10.85,
          10.87,
          10.9,
          10.92,
          10.94,
          10.96,
          10.99,
          11.01,
          11.03,
          11.05,
          11.08,
          11.1,
          11.12,
          11.14,
          11.17,
          11.19,
          11.21,
          11.24],
        fill: false,
        borderColor: 'red',
        tension: 0.3,
        pointRadius: 0, // 점의 반지름을 0으로 설정하여 숨김
        yAxisID: 'weight',
      },
    ],
  };

  const options = {
    scales: {
      x: {
        title: {
          display: true,
          text: '일',
          align: 'end', // 우측 정렬
          position: 'bottom', // 하단에 표시
        },
      },
      y: {
        display: false,
        
        title: {
          display: true,
          text: '키(cm)',
          align: 'start',
          position: 'top',
        },
      },
      
    },
  };

  const weightOptions = {
    scales: {
      x: {
        title: {
          display: true,
          text: '일',
          align: 'end', // 우측 정렬
          position: 'bottom', // 하단에 표시
      },
        
      },
      
      
      
    },
  };

  return (
    <div>
      <Header></Header>
      
      <div style={{ display: 'flex', justifyContent: 'space-between', margin: '60px' }}>
        <div style={{ width: '60%', marginRight: '30px' }}>
          <h3 style={{ fontFamily: 'Jua, sans-serif', textAlign: 'center' }}>&lt;예상 키 그래프&gt;</h3>
          <Line data={heightData} options={options} />
        </div>
        <div style={{ width: '35%' }}>
          <br></br><br></br><br></br><br></br>
          <h4 style={{ fontFamily: 'Jua, sans-serif' }}>아이의 1개월 뒤 예상 키는 66.9cm 입니다.</h4>
          <h4 style={{ fontFamily: 'Jua, sans-serif' }}>아이의 3개월 뒤 예상 키는 71.9cm 입니다.</h4>
          <h4 style={{ fontFamily: 'Jua, sans-serif' }}>아이의 6개월 뒤 예상 키는 79.3cm 입니다.</h4>
        </div>
      </div>

      <div style={{ display: 'flex', justifyContent: 'space-between', margin: '60px' }}>
        <div style={{ width: '60%', marginRight: '30px' }}>
          <h3 style={{ fontFamily: 'Jua, sans-serif', textAlign: 'center' }}>&lt;예상 몸무게 그래프&gt;</h3>
          <Line data={weightData} options={weightOptions} />
        </div>
        <div style={{ width: '35%' }}>
          <br></br><br></br><br></br><br></br>
          <h4 style={{ fontFamily: 'Jua, sans-serif' }}>아이의 1개월 뒤 예상 몸무게는 7.9kg 입니다.</h4>
          <h4 style={{ fontFamily: 'Jua, sans-serif' }}>아이의 3개월 뒤 예상 몸무게는 9.2kg 입니다.</h4>
          <h4 style={{ fontFamily: 'Jua, sans-serif' }}>아이의 6개월 뒤 예상 몸무게는 11.2kg 입니다.</h4>
        </div>
      </div>






    </div>
    
      
      
  );
};
  
export default Predict;

